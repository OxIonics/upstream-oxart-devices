[tool.poetry]
name = "oxart-devices"
version = "0.2"
description = ""
authors = ["Oxford Ion Trap Group", "Oxford Ionics"]
license = "Proprietary"

[[tool.poetry.source]]
name = "oxionics"
url = "http://pypi.oxionics.com:3141/oiuser/oxionics/+simple/"
default = true

[tool.poetry.dependencies]
# We are using a slightly old PyQt5 (specified by artiq) which limits what
# Python versions have wheels available. If we upgrade the Qt version we can
# probably relax this Python requirement.
python = "~3.8"
sipyco = "^1.4.52"
toml = "^0.10.2"
appdirs = "^1.4.4"
pyzmq = "^23.2.0"
m-labs-asyncserial = "^0.1.0"
scipy = "^1.8.1"
julia = "^0.5.7"
pyserial = "^3.5"

[tool.poetry.dev-dependencies]
flake8 = "^4.0.1"
pytest = "^6.2.5"
pre-commit = "^2.17.0"
yapf = "^0.32.0"

[tool.poetry.scripts]
aqctl_andor_emccd = "oxart.frontend.aqctl_andor_emccd:main"
aqctl_agilent_6671a = "oxart.frontend.aqctl_agilent_6671a:main"
aqctl_booster = "oxart.frontend.aqctl_booster:main"
aqctl_brooks_4850 = "oxart.frontend.aqctl_brooks_4850:main"
aqctl_current_stabilizer = "oxart.frontend.aqctl_current_stabilizer:main"
aqctl_lakeshore_335 = "oxart.frontend.aqctl_lakeshore_335:main"
aqctl_orca_camera = "oxart.frontend.aqctl_orca_camera:main"
aqctl_scpi_dmm = "oxart.frontend.aqctl_scpi_dmm:main"
aqctl_scpi_synth = "oxart.frontend.aqctl_scpi_synth:main"
aqctl_surf_solver = "oxart.frontend.aqctl_surf_solver:main"
aqctl_thorlabs_tcube = "oxart.frontend.aqctl_thorlabs_tcube:main"
aqctl_tti_ql355 = "oxart.frontend.aqctl_tti_ql355:main"
aqctl_thorlabs_pm100a = "oxart.frontend.aqctl_thorlabs_pm100a:main"
aqctl_v3500a = "oxart.frontend.aqctl_v3500a:main"
aqctl_thermostat = "oxart.frontend.aqctl_thermostat:main"
arduino_dac_controller = "oxart.frontend.arduino_dac_controller:main"
bb_shutter_controller = "oxart.frontend.bb_shutter_controller:main"
bme_pulse_picker_timing_controller = "oxart.frontend.bme_pulse_picker_timing_controller:main"
camera_viewer = "oxart.frontend.camera_viewer:main"
conex_motor_controller = "oxart.frontend.conex_motor_controller:main"
hoa2_dac_controller = "oxart.frontend.hoa2_dac_controller:main"
holzworth_synth_controller = "oxart.frontend.holzworth_synth_controller:main"
logger_solstis = "oxart.frontend.logger_solstis:main"
log_kasli_health = "oxart.frontend.log_kasli_health:main"
ophir_controller = "oxart.frontend.ophir_controller:main"
picomotor_controller = "oxart.frontend.picomotor_controller:main"
scpi_awg_controller = "oxart.frontend.scpi_awg_controller:main"
thorlabs_ddr25_controller = "oxart.frontend.thorlabs_ddr25_controller:main"
thorlabs_ddr05_controller = "oxart.frontend.thorlabs_ddr05_controller:main"
thorlabs_k10cr1_controller = "oxart.frontend.thorlabs_k10cr1_controller:main"
thorlabs_mdt69xb_controller = "oxart.frontend.thorlabs_mdt69xb_controller:main"
thorlabs_mdt693a_controller = "oxart.frontend.thorlabs_mdt693a_controller:main"
thorlabs_bpc303_controller = "oxart.frontend.thorlabs_bpc303_controller:main"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
format-jinja = "{{ base }}.{{ distance }}+g{{ commit }}"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"

[tool.lady_jessica]
parent_branch = "parent_python_third-party"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
pre-commit-install="pre-commit install"
fmt = "yapf -i -r ."
fmt-test = "yapf -r ."
test = "pytest"
flake = "flake8 ."
